[context_med_in]
exten => _X.,1,Verbose()
 same => n,Goto(context_local_med_from_in,${EXTEN},1)

[context_local_med_from_out]
exten => _X.,1,Verbose()
 same => n,Set(inout=---out)
 same => n,Set(direction=out)
 same => n,Goto(local_med,${EXTEN},1)

[context_local_med_from_in]
exten => _X.,1,Verbose()
 same => n,Set(inout=---in)
 same => n,Set(direction=in)
 same => n,Goto(local_med,${EXTEN},1)


[local_med]
exten => _X.,1,Verbose()
 same => n,Answer

 same => n,Set(DATE1=${STRFTIME(${EPOCH},GMT-3,%Y-%m-%d)})
 same => n,Set(DATE2=${STRFTIME(${EPOCH},GMT-3,%Y_%m_%d)})
 same => n,Set(TIME1=${STRFTIME(${EPOCH},GMT-3,%H-%M-%S)})

 same => n,Set(NUMBER=${EXTEN})
 same => n,Set(FILENAME=med---${EXTEN}---${STRFTIME(${EPOCH},GMT-3,%Y-%m-%d_%H-%M-%S)}${inout})
 same => n,Monitor(wav,inout/${FILENAME});


 ;same => n,GoSub(local_med_ivr_2,${EXTEN},1)
 ;same => n,GoSub(local_med_ivr_2_1,${EXTEN},1)
 same => n,GoSub(local_med_ivr_2_1_1,${EXTEN},1)

 same => n,Set(TIMER_L_0=${SHELL(date +%s.%N):0:-1});
 same => n,WaitForSilence(500,3,4);
 same => n,Set(TIMER_L_1=${SHELL(date +%s.%N):0:-1});

 same => n,Hangup()
 same => n,Goto(local_med_done,s,1)
exten => h,1,Verbose("h")
 same => n,Goto(local_med_done,s,1)

[local_med_ivr_2]
exten => _X.,1,Verbose()

 ;WaitForSilence([silencerequired,[iterations,[timeout]]])
 same => n,Set(TIMER_0_0=${SHELL(date +%s.%N):0:-1});
 same => n,WaitForSilence(100,1,1);
 same => n,Set(TIMER_0_1=${SHELL(date +%s.%N):0:-1});
 same => n,WaitForNoise(100,2,1);
 same => n,Set(TIMER_0_2=${SHELL(date +%s.%N):0:-1});
 same => n,WaitForSilence(400,2,3);
 same => n,Set(TIMER_0_3=${SHELL(date +%s.%N):0:-1});
 same => n,Playback("custom/med/ivr-2")
 same => n,Return

exten => h,1,Goto(local_med_done,s,1)

[local_med_ivr_2_1]
exten => _X.,1,Verbose()
 same => n,Set(IVR_SILENCE=2000)
 same => n,Set(IVR_NOISE=100)
 same => n,Set(IVR_MED_MIN=4000)
 same => n,Set(IVR_MED_MAX=8000)
 same => n,Set(IVR_MED_LIMIT=120000)

 same => n,Set(TIMER_0_0=${SHELL(date +%s.%N):0:-1})
 same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,${IVR_NOISE}))
 same => n,Set(TIMER_1_0=${SHELL(date +%s.%N):0:-1})
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-1"); здравствуйте
 same => n,Set(TIMER_1_1=${SHELL(date +%s.%N):0:-1})
 same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-2"); вам звонит
 same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-3"); скажите пожалуйста темп
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-4"); есть ли боль в горле
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-5"); есть ли насморк
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-6"); Самочувствие
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-7"); ставил ли врач
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-8"); Назовите фио
 same => n,GoSub(local_vad,${EXTEN},1(6000,10000,${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2-1-1/ivr-2-9"); Спасибо
 same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,200))
 same => n,Return

exten => h,1,Goto(local_med_done,s,1)

[local_med_ivr_2_1_1] ;Daniil Requrements Experiment
exten => _X.,1,Verbose()
 same => n,Set(IVR_SILENCE=1500)
 same => n,Set(IVR_NOISE=100)
 same => n,Set(IVR_MED_MIN=2000)
 same => n,Set(IVR_MED_MAX=4000)
 same => n,Set(IVR_MED_LIMIT=120000)

 same => n,Set(TIMER_0_0=${SHELL(date +%s.%N):0:-1})
 same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,${IVR_NOISE}))
 same => n,Set(TIMER_1_0=${SHELL(date +%s.%N):0:-1})
 same => n,Playback("custom/med/ivr-2/ivr-2-1"); здравствуйте
 same => n,Set(TIMER_1_1=${SHELL(date +%s.%N):0:-1})
 ;same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2/ivr-2-2"); вам звонит
 ;same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2/ivr-2-3"); скажите пожалуйста темп
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Set(WAITSTATUS_NOISE1=${WAITSTATUS_NOISE})
 same => n,Playback("custom/med/ivr-2/ivr-2-4"); есть ли боль в горле
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Set(WAITSTATUS_NOISE2=${WAITSTATUS_NOISE})
 same => n,GotoIf($["${WAITSTATUS_NOISE2}${WAITSTATUS_NOISE1}" = "TIMEOUTTIMEOUT"]?end)
 same => n,Playback("custom/med/ivr-2/ivr-2-5"); есть ли насморк
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2/ivr-2-6"); Самочувствие
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2/ivr-2-7"); ставил ли врач
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n,Playback("custom/med/ivr-2/ivr-2-8"); Назовите фио
 same => n,GoSub(local_vad,${EXTEN},1(${IVR_MED_MIN},${IVR_MED_MAX},${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 ;same => n,GoSub(local_vad,${EXTEN},1(6000,10000,${IVR_MED_LIMIT},${IVR_SILENCE},${IVR_NOISE}))
 same => n(end),Playback("custom/med/ivr-2/ivr-2-9"); Спасибо
 same => n,GoSub(local_vad,${EXTEN},1(400,1000,1000,400,200))


 same => n,Return

exten => h,1,Goto(local_med_done,s,1)

[local_vad]
exten => _X.,1,Verbose("VAD MIN=${ARG1} MAX=${ARG2} SILENCE=${ARG3} NOISE=${ARG4}")
 same => n,Set(MIN=${ARG1})
 same => n,Set(MAX=${ARG2})
 same => n,Set(LIMIT=${ARG3})
 same => n,Set(SILENCE=${ARG4})
 same => n,Set(NOISE=${ARG5})

;;
;; same => n,GoSub(local_vad_silence,${EXTEN},1(${MIN},${MAX},${SILENCE},${NOISE}))
;; same => n,Return
;;

 same => n,Set(START=${SHELL(date +%s.%N):0:-1});

 same => n,GoSub(local_vad_noise,${EXTEN},1(${MIN},${MAX},${SILENCE},${NOISE}))
 same => n,Verbose(${WAITSTATUS})
 same => n,Set(WAITSTATUS_NOISE=${WAITSTATUS})
 same => n,Set(MAX=${IF($[ "${WAITSTATUS}" = "NOISE" ]?${LIMIT}:${MAX})})

 same => n,Set(NOISE_END=${SHELL(date +%s.%N):0:-1});
 same => n,Set(WAIT_NOISE_FACT=$[ (${NOISE_END} - ${START}) * 1000 ])
 same => n,Set(MIN1=$[ ${MIN} - ${WAIT_NOISE_FACT} ])
 same => n,Set(MAX1=$[ ${MAX} - ${WAIT_NOISE_FACT} ])

 same => n,GoSub(local_vad_silence,${EXTEN},1(${MIN1},${MAX1},${SILENCE},${NOISE}))
 same => n,Set(WAITSTATUS_SILENCE=${WAITSTATUS})

 same => n,Return
exten => h,1,Goto(local_med_done,s,1)


[local_vad_wait]
exten => _X.,1,Verbose("VAD_WAIT MIN=${ARG1} MAX=${ARG2} SILENCE=${ARG3} NOISE=${ARG4}")
 same => n,Set(WAIT_S=$[ ${MIN} / 1000 ]) 
 same => n,Wait(${WAIT_S})

 same => n,Return
exten => h,1,Goto(local_med_done,s,1)

[local_vad_silence]
exten => _X.,1,Verbose("VAD_SILENCE MIN=${ARG1} MAX=${ARG2} SILENCE=${ARG3} NOISE=${ARG4}")
 same => n,Set(MIN=${ARG1})
 same => n,Set(MAX=${ARG2})
 same => n,Set(SILENCE=${ARG3})
 same => n,Set(NOISE=${ARG4})

 same => n,Set(WAIT=$[ ${MIN} - ${SILENCE} ])
 same => n,Set(WAIT=${IF($[${WAIT}<0]?0:${WAIT})})

 same => n,Set(WAIT_S=$[ ${WAIT} / 1000 ]) ; 

 same => n,Set(WAIT_SILENCE=$[ ${MAX} - ${WAIT} ]) ; MAX-WAIT
 same => n,Set(WAIT_SILENCE_S=$[ ${WAIT_SILENCE} / 1000 ]) ; 
 same => n,Wait(${WAIT_S})

 same => n,Set(WAIT_SILENCE_S=${IF($[${WAIT_SILENCE_S}<1]?1:${WAIT_SILENCE_S})})
 same => n,WaitForSilence(${SILENCE},1,${WAIT_SILENCE_S});
 same => n,Verbose(${WAITSTATUS})

 same => n,Return
exten => h,1,Goto(local_med_done,s,1)


[app_waitforvoice]
exten => s,1,Verbose("waitforvoice VALUE=${ARG1} TIMEOUT=${ARG2}")
 same => n,Set(VALUE=${ARG1})
 same => n,Set(TIMEOUT=${ARG2})

 same => n,Set(CMD=/opt/med/go/vad /var/spool/asterisk/monitor/inout/${FILENAME}-in.wav waitforvoice ${VALUE} ${TIMEOUT})
 same => n,Set(WAITSTATUS=${SHELL(${CMD})})


 same => n,Return
exten => h,1,Goto(local_med_done,s,1)

[local_vad_noise]
exten => _X.,1,Verbose("VAD_NOISE MIN=${ARG1} MAX=${ARG2} SILENCE=${ARG3} NOISE=${ARG4}")
 same => n,Set(MIN=${ARG1})
 same => n,Set(MAX=${ARG2})
 same => n,Set(SILENCE=${ARG3})
 same => n,Set(NOISE=${ARG4})

 same => n,Set(WAIT_NOISE=$[ ${MAX} - ${NOISE} ])
 same => n,Set(WAIT_NOISE_S=$[ ${WAIT_NOISE} / 1000 ])
 same => n,Set(WAIT_NOISE_S=${IF($[${WAIT_NOISE_S}<1]?1:${WAIT_NOISE_S})})

 same => n,WaitForNoise(${NOISE},1,${WAIT_NOISE_S});
 ;same => n,GoSub(app_waitforvoice,s,1(${NOISE},${WAIT_NOISE_S}))

 same => n,Verbose(${WAITSTATUS})

 same => n,Return
exten => h,1,Goto(local_med_done,s,1)







 ;BackgroundDetect(filename,[sil,[min,[max,[analysistime]]]])
 ;Plays back filename, waiting for interruption from a given digit (the digit must start the beginning of a valid extension, or it will be ignored). During the playback of the file, audio is monitored in the receive direction, and if a period of non-silence which is greater than min ms yet less than max ms is followed by silence for at least sil ms, which occurs during the first analysistime ms, then the audio playback is aborted and processing jumps to the talk extension, if available.
 ;same => n,Wait(${ARG1})
 ;wait {$ARG1}
 ;same => n,BackgroundDetect("custom/med/ivr-2/ivr-2-0",2,${ARG1},${ARG2})

 ;same => n,BackgroundDetect("custom/med/ivr-2/ivr-2-0",1,2,{$ARG2},${ARG1})

 ;same => n,BackgroundDetect("custom/med/ivr-2/ivr-2-0",2000,100,60000)
 ;same => n,BackgroundDetect("custom/med/ivr-2/ivr-2-0",2000,100,60000)
 ;same => n,Wait(${ARG1})
 ;same => n,Return



[local_med_done]
exten => s,1,Verbose("local_med_done")
 same => n,StopMonitor
 same => n,Set(TIMER_H=${SHELL(date +%s.%N):0:-1});

 same => n,System(mkdir /var/spool/asterisk/monitor/orkaudio)
 same => n,System(mkdir /var/spool/asterisk/monitor/orkaudio/${DATE1})

 same => n,System(sox -M /var/spool/asterisk/monitor/inout/${FILENAME}-in.wav /var/spool/asterisk/monitor/inout/${FILENAME}-out.wav /var/spool/asterisk/monitor/orkaudio/${DATE1}/${FILENAME}.wav)
 ;same => n,System(/usr/bin/chmod 777 /var/spool/asterisk/monitor/orkaudio/${DATE1}/${FILENAME}.wav)
 ;date=2020-04-24_22-51-57 duration=96 direction=out localside=both audiokeepdirection=both capturePort=XCBK localParty=088123138843 remoteParty=6450 localEntryPoint= localIp=192.168.100.90 remoteIp=192.168.160.170 filename=2020-04-24/2020-04-24_22-51-57__6450__088123138843__XCBK__7.wav ondemand=false

 same => n,Set(LOG="date=${DATE1}_${TIME1} duration=${CDR(duration)} billsec=${CDR(billsec)} direction=${direction} localside=both audiokeepdirection=both capturePort=XCBK localParty=med remoteParty=${NUMBER} localEntryPoint= localIp= remoteIp= filename=${DATE1}/${FILENAME}.wav ondemand=false context=ivr-2 json={HANGUPCAUSE:${HANGUPCAUSE},TIMER_0_0:${TIMER_0_0},TIMER_0_1:${TIMER_0_1},TIMER_0_2:${TIMER_0_2},TIMER_0_3:${TIMER_0_3},TIMER_L_0:${TIMER_L_0},TIMER_L_1:${TIMER_L_1},TIMER_H:${TIMER_H}}")
 same => n,System(echo ${LOG} >> /var/spool/asterisk/monitor/orkaudio/${DATE2}_orkaudio.log)



 ;same => n,System(echo "{HANGUPCAUSE:${HANGUPCAUSE},TIMER_0_0:${TIMER_0_0},TIMER_0_1:${TIMER_0_1},TIMER_0_2:${TIMER_0_2},TIMER_0_3:${TIMER_0_3},TIMER_L_0:${TIMER_L_0},TIMER_L_1:${TIMER_L_1},TIMER_H:${TIMER_H}}" > /var/spool/asterisk/monitor/mix/${FILENAME}.wav.meta)
 ;same => n,System(/usr/bin/chmod 777 /var/spool/asterisk/monitor/mix/${FILENAME}.wav.meta)
 ;same => n,System(echo "ok" > /var/spool/asterisk/monitor/mix/${FILENAME}.wav.ok)
 ;same => n,System(/usr/bin/chmod 777 /var/spool/asterisk/monitor/mix/${FILENAME}.wav.ok)
